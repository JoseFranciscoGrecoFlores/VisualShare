@inject Blazored.LocalStorage.ILocalStorageService LocalStorage;
@inject ApiAuthenticationStateProvider AuthenticationStateProvider;


<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <a class="navbar-brand" href="#">Visual share</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="navbar-collapse @NavMenuCssClass" id="navbarNav">
        <ul class="navbar-nav">
            <li class="nav-item">
                <NavLink class="nav-link" href="">
                    <span class="oi oi-home" aria-hidden="true"></span> Inicio
                </NavLink>
            </li>
            <AuthorizeView>
                <Authorized>
                    <li class="nav-item align-self-center">
                        <button @onclick="LogOut" class="btn btn-link text-white"><span class="oi oi-account-logout" aria-hidden="true"></span> Cerrar sesión</button>
                    </li>
                </Authorized>
            </AuthorizeView>
        </ul>
    </div>
</nav>

@code {
    private bool collapseNavMenu = true;
    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    
    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task LogOut()
    {
        await LocalStorage.RemoveItemAsync("Author name");
        AuthenticationStateProvider.MarkUserAsLoggedOut();
    }
}
