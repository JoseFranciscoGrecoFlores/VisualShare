@using VisualShare.Shared
@inject HttpClient Http;
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage;

<div class="mt-3 form-inline">
    <span>@Post.Likes.Count Likes </span>
    <button class="btn btn-outline-dark ml-2" @onclick="@UploadLike" disabled="@IsButtonDisabled">Like</button>
</div>


@code {
    [Parameter]
    public Post Post { get; set; }

    private bool IsButtonDisabled { get; set; } = true;

    [Parameter]
    public EventCallback OnPostLiked { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        var authorName = await LocalStorage.GetItemAsync<string>("Author name");
        IsButtonDisabled = Post.Likes.Any(like => like.Author == authorName);
    }

    private async Task UploadLike()
    {
        var authorName = await LocalStorage.GetItemAsync<string>("Author name");
        if (Post.Likes.Any(like => like.Author == authorName))
        {
            IsButtonDisabled = true;
            return;
        }
        IsButtonDisabled = true;
        var result = await Http.PostAsJsonAsync("likes", new UploadLike(authorName, Post.PostId, Post.IsPhoto));
        result.EnsureSuccessStatusCode();
        await OnPostLiked.InvokeAsync(null);
    }
}