// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VisualShare.Server;

namespace VisualShare.Server.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("VisualShare.Shared.Author", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("VisualShare.Shared.Category", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("VisualShare.Shared.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PhotoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("PublishedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("DATETIME('now')");

                    b.Property<int?>("VideoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AuthorName");

                    b.HasIndex("PhotoId");

                    b.HasIndex("VideoId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("VisualShare.Shared.Like", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PhotoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VideoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PhotoId");

                    b.HasIndex("VideoId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("VisualShare.Shared.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorName")
                        .HasColumnType("TEXT");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Content")
                        .HasColumnType("BLOB");

                    b.Property<string>("Extension")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublishedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("DATETIME('now')");

                    b.HasKey("Id");

                    b.HasIndex("AuthorName");

                    b.HasIndex("CategoryName");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("VisualShare.Shared.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorName")
                        .HasColumnType("TEXT");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Content")
                        .HasColumnType("BLOB");

                    b.Property<string>("Extension")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("PublishedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("DATETIME('now')");

                    b.HasKey("Id");

                    b.HasIndex("AuthorName");

                    b.HasIndex("CategoryName");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("VisualShare.Shared.Comment", b =>
                {
                    b.HasOne("VisualShare.Shared.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorName");

                    b.HasOne("VisualShare.Shared.Photo", null)
                        .WithMany("Comments")
                        .HasForeignKey("PhotoId");

                    b.HasOne("VisualShare.Shared.Video", null)
                        .WithMany("Comments")
                        .HasForeignKey("VideoId");
                });

            modelBuilder.Entity("VisualShare.Shared.Like", b =>
                {
                    b.HasOne("VisualShare.Shared.Photo", null)
                        .WithMany("Likes")
                        .HasForeignKey("PhotoId");

                    b.HasOne("VisualShare.Shared.Video", null)
                        .WithMany("Likes")
                        .HasForeignKey("VideoId");
                });

            modelBuilder.Entity("VisualShare.Shared.Photo", b =>
                {
                    b.HasOne("VisualShare.Shared.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorName");

                    b.HasOne("VisualShare.Shared.Category", null)
                        .WithMany("Photos")
                        .HasForeignKey("CategoryName");
                });

            modelBuilder.Entity("VisualShare.Shared.Video", b =>
                {
                    b.HasOne("VisualShare.Shared.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorName");

                    b.HasOne("VisualShare.Shared.Category", null)
                        .WithMany("Videos")
                        .HasForeignKey("CategoryName");
                });
#pragma warning restore 612, 618
        }
    }
}
